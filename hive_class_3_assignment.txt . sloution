1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv :-
I have downloaded sales data from this link it has 2824 line. Then use vim editor for write a data in local file system in cloudera.

2. Store raw data into hdfs location:-
I have store a data into hdfs. 
Query:- hdfs dfs -put /home/cloudera/sales_order_data.csv /tmp/hive_data

Open hive:

3. Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table
use <database>;

 CREATE TABLE IF NOT EXISTS sales_order_csv
     (
     ordernumber INT,
     quantityordered INT,
     priceeach FLOAT,
     orderlinenumber INT,
     sales FLOAT,
     status STRING,
     qtr_id INT,
     month_id INT,
     year_id INT,
     productline STRING,
     msrp INT,
     productcode STRING,
     phone VARCHAR(20),
     city STRING,
     state STRING,
     postalcode INT,
     country STRING,
     territory STRING,
     contactlastname STRING,
     contactfirstname STRING,
     dealsize STRING
     )
     ROW FORMAT DELIMITED
     FIELDS TERMINATED BY ',';
     
("phone VARCHAR(20)is good for mobile number data type . 
 Because it may sometimes contain country code for example +91 or spaces also.
 For comparison purpose we can remove all special characters from both side in the expresion.")
     
DESCRIBE sales_order_csv;
  result:-
ordernumber             int
quantityordered         int
priceeach               float
orderlinenumber         int
sales                   float
status                  string
qtr_id                  int
month_id                int
year_id                 int
productline             string
msrp                    int
productcode             string
phone                   varchar(20)
city                    string
state                   string
postalcode              int
country                 string
territory               string
contactlastname         string
contactfirstname        string
dealsize                string

4. Load data from hdfs path into "sales_order_csv" :-
LOAD DATA INPATH '/tmp/hive_data/sales_order_data.csv' INTO TABLE sales_order_csv; 

5.Create an internal hive table which will store data in ORC format "sales_order_orc" :-
     CREATE TABLE IF NOT EXISTS sales_order_orc
     (
     ordernumber INT,
     quantityordered INT,
     priceeach FLOAT,
     orderlinenumber INT,
     sales FLOAT,
     status STRING,
     qtr_id INT,
     month_id INT,
     year_id INT,
     productline STRING,
     msrp INT,
     productcode STRING,
     phone VARCHAR(20),
     city STRING,
     state STRING,
     postalcode INT,
     country STRING,
     territory STRING,
     contactlastname STRING,
     contactfirstname STRING,
     dealsize STRING
     )
     STORED AS ORC;
     
6. Load data from "sales_order_csv" into "sales_order_orc" :-
FROM sales_order_csv INSERT OVERWRITE TABLE sales_order_orc SELECT *;

Perform below menioned queries on "sales_order_orc" table :-

a. Calculatye total sales per year :-
 SELECT year_id, sum(sales) AS TOTAL_SALES FROM sales_order_orc group by year_id;
 
 result:-
year_id total_sales
2003    3516979.547241211
2004    4724162.593383789
2005    1791486.7086791992
 
b. Find a product for which maximum orders were placed :-
     SELECT
     productline,
     max(QUANTITYORDERED) as max_order
     FROM sales_order_orc
     group by productline
     limit 20;
     
      result:-
      productline     max_order
      Classic Cars    97
      Motorcycles     66
      Planes          85
      Ships           55
      Trains          51
      Trucks and Buses        70
       Vintage Cars     76

c. Calculate the total sales for each quarter :-
     SELECT
     qtr_id,
     sum(sales) as total_sales_year
     from sales_order_orc
     group by qtr_id;
     
     result:-
     1       2350817.726501465
     2       2048120.3029174805
     3       1758910.808959961
     4       3874780.010925293


d. In which quarter sales was minimum :-
     select
     qtr_id,
     sum(sales) as min_sales
     from sales_order_orc
     group by qtr_id
     order by min_sales;
     
     result :-
     qtr_id     min_sales
     3       1758910.808959961
     2       2048120.3029174805
     1       2350817.726501465
     4       3874780.010925293

e. In which country sales was maximum and in which country sales was minimum :-
max :-
    select
     country,
     max(sales) as max_sales
     from sales_order_orc
     group by country
     limit 2;
     
     rsult :-
     country   max_sales
     Spain   12001.0
      USA     14082.8
      
min :-
     select 
     country,
     min(sales) as min_sales;
     from sales_order_orc
     group by country
     limit 2;
     
     result :-
     country    min_sales
    Australia       652.35
     Austria        640.05

     
     
f. Calculate quartelry sales for each city :-    
     select
     qtr_id,
     city,
     sum(sales) as total_sales
     from sales_order_orc
     group by qtr_id,city;
     
     result :-
qtr_id   county   total_sales     
1       Bergamo 56181.320068359375
1       Boras   31606.72021484375
1       Brickhaven      31474.7802734375
1       Brisbane        16118.479858398438
1       Bruxelles       18800.089721679688
1       Burbank 37850.07958984375
1       Burlingame      13529.570190429688
1       Cambridge       21782.699951171875
1       Charleroi       16628.16015625
1       Cowes   26906.68017578125
1       Dublin  38784.470458984375
1       Espoo   51373.49072265625
1       Frankfurt       48698.82922363281
1       Gensve  50432.549560546875
1       Glendale        3987.199951171875
1       Graz    8775.159912109375
1       Helsinki        26422.819458007812
1       Kobenhavn       58871.110107421875
1       Lille   20178.1298828125
1       London  8477.219970703125
1       Los Angeles     23889.320068359375
1       Lule    9748.999755859375
1       Lyon    101339.13977050781
1       Madrid  357668.4899291992
1       Makati City     55245.02014160156
1       Manchester      51017.919860839844
1       Marseille       2317.43994140625
1       Melbourne       49637.57067871094
1       Minato-ku       38191.38977050781
1       NYC     32647.809814453125
1       Nantes  59617.39978027344
1       Nashua  12133.25
1       New Bedford     48578.95935058594
1       Newark  8722.1201171875
1       North Sydney    65012.41955566406
1       Osaka   50490.64013671875
1       Oulu    49055.40026855469
1       Paris   71494.17944335938
1       Pasadena        44273.359436035156
1       Philadelphia    27398.820434570312
1       Reims   52029.07043457031
1       San Diego       87489.23010253906
1       San Francisco   72899.19995117188
1       San Rafael      267315.2586669922
1       Singapore       28395.18994140625
1       South Brisbane  21730.029907226562
1       Stavern 54701.999755859375
1       Toulouse        15139.1201171875
1       Versailles      5759.419921875
2       Allentown       6166.7998046875
2       Barcelona       4219.2001953125
2       Boston  74994.240234375
2       Brickhaven      7277.35009765625
2       Bridgewater     75778.99060058594
2       Bruxelles       8411.949829101562
2       Cambridge       14380.920043945312
2       Charleroi       1711.260009765625
2       Chatswood       43971.429931640625
2       Espoo   31018.230102539062
2       Glen Waverly    14378.089965820312
2       Glendale        20350.949768066406
2       Kobenhavn       62091.880615234375
2       Las Vegas       33847.61975097656
2       Liverpool       91211.0595703125
2       London  32376.29052734375
2       Madrid  339588.0513305664
2       Marseille       52481.840087890625
2       Melbourne       60135.84033203125
2       Minato-ku       26482.700256347656
2       Montreal        58257.50012207031
2       NYC     165100.33947753906
2       Nantes  60344.990173339844
2       New Haven       36973.309814453125
2       Newark  74506.06909179688
2       Osaka   17114.43017578125
2       Oulu    17813.40008544922
2       Paris   80215.4203491211
2       Philadelphia    7287.240234375
2       Reggio Emilia   41509.94006347656
2       Reims   18971.959716796875
2       Salzburg        98104.24005126953
2       San Jose        160010.27026367188
2       San Rafael      7261.75
2       Singapore       92033.77014160156
2       Strasbourg      80438.47985839844
2       Tsawassen       31302.500244140625
3       Allentown       71930.61041259766
3       Bergen  16363.099975585938
3       Boras   53941.68981933594
3       Boston  15344.640014648438
3       Brickhaven      114974.53967285156
3       Brisbane        34100.030029296875
3       Bruxelles       47760.479736328125
3       Burlingame      42031.83020019531
3       Cambridge       48828.71942138672
3       Charleroi       1637.199951171875
3       Chatswood       69694.40002441406
3       Dublin  18971.959838867188
3       Espoo   31569.430053710938
3       Gensve  67281.00903320312
3       Glen Waverly    12334.819580078125
3       Glendale        7600.1201171875
3       Helsinki        42744.0595703125
3       Las Vegas       34453.84973144531
3       Madrid  69714.09008789062
3       Munich  34993.92004394531
3       NYC     63027.92004394531
3       Nantes  61310.880126953125
3       New Bedford     45738.38952636719
3       North Sydney    47191.76013183594
3       Oslo    34145.47021484375
3       Oulu    37501.580322265625
3       Paris   27798.480102539062
3       Pasadena        55776.119873046875
3       Reggio Emilia   56421.650390625
3       Reims   15146.31982421875
3       Salzburg        6693.2802734375
3       San Rafael      216297.40063476562
3       Singapore       90250.07995605469
3       South Brisbane  10640.290161132812
3       Torino  94117.25988769531
3       Toulouse        17251.08056640625
3       Tsawassen       43332.349609375
4       Aaarhus 100595.5498046875
4       Allentown       44040.729736328125
4       Barcelona       74192.66003417969
4       Bergamo 81774.40008544922
4       Bergen  95277.17993164062
4       Boras   48710.92053222656
4       Boston  63730.7802734375
4       Brickhaven      11528.52978515625
4       Bridgewater     26115.800537109375
4       Burbank 8234.559936523438
4       Burlingame      65221.67004394531
4       Cambridge       54251.659912109375
4       Charleroi       13463.480224609375
4       Chatswood       37905.14990234375
4       Cowes   51334.15966796875
4       Frankfurt       36472.76025390625
4       Glen Waverly    37878.54992675781
4       Glendale        34485.49987792969
4       Graz    43488.740234375
4       Helsinki        42083.499755859375
4       Kobenhavn       24078.610107421875
4       Koln    100306.58020019531
4       Las Vegas       14449.609741210938
4       Lille   48874.28088378906
4       Liverpool       26797.210083007812
4       London  83970.029296875
4       Los Angeles     24159.14013671875
4       Lule    66005.8798828125
4       Lyon    41535.11022949219
4       Madrid  315580.80963134766
4       Makati City     38770.71032714844
4       Manchester      106789.88977050781
4       Marseille       20136.859985351562
4       Melbourne       91221.99914550781
4       Minato-ku       55888.65026855469
4       Montreal        15947.290405273438
4       NYC     300011.6999511719
4       Nantes  23031.589599609375
4       Nashua  119552.04949951172
4       New Bedford     113557.509765625
4       New Haven       42498.760498046875
4       North Sydney    41791.949462890625
4       Oslo    45078.759765625
4       Paris   89436.60034179688
4       Pasadena        4512.47998046875
4       Philadelphia    116503.07043457031
4       Reggio Emilia   44669.740478515625
4       Reims   48895.59014892578
4       Salzburg        45001.10986328125
4       San Francisco   151459.4805908203
4       San Rafael      163983.64880371094
4       Sevilla 54723.621154785156
4       Singapore       77809.37023925781
4       South Brisbane  27098.800048828125
4       Stavern 61897.19006347656
4       Toulouse        38098.240234375
4       Vancouver       75238.91955566406
4       Versailles      59074.90026855469
4       White Plains    85555.98962402344

     
h. Find a month for each year in which maximum number of quantities were sold :-
     select year_id, month_id, quantityordered from
     (select year_id, month_id, quantityordered ,rank() over (partition by year_id, month_id order by cast(quantityordered as int) desc) r from (
     SELECT year_id, month_id, sum(quantityordered)  quantityordered from  sales_order_orc
     group by  year_id,month_id   )  s) s
     WHERE s.r = 1;
     
     result:-
2003    1       1357
2003    2       1449
2003    3       1755
2003    4       1993
2003    5       2017
2003    6       1649
2003    7       1725
2003    8       1974
2003    9       2510
2003    10      5515
2003    11      10179
2003    12      2489
2004    1       3245
2004    2       3061
2004    3       1978
2004    4       2077
2004    5       2618
2004    6       2971
2004    7       3174
2004    8       4564
2004    9       3171
2004    10      5483
2004    11      10678
2004    12      3804
2005    1       3395
2005    2       3393
2005    3       3852
2005    4       2634
2005    5       4357

